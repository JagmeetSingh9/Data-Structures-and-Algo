import java.util.*;

public class rev {
    private static int size;
    Node head;

    class Node {
        int data;
        rev.Node next;

        Node(int data) {
            this.data = data;
            this.next = null;
        }
    }

    public void add(int data) {
        Node newNode = new Node(data);
        newNode.next = head;
        head = newNode;

    }

    public void reverseList() {
        if (head == null || head.next == null) {
            return;
        }

        Node prevNode = head;
        Node currNode = head.next;
        while (currNode != null) {
            Node nextNode = currNode.next;
            currNode.next = prevNode;
            prevNode = currNode;
            currNode = nextNode;
        }
        head.next = null;
        head = prevNode;
    }

    public void printList() {
        Node currNode = head;

        while (currNode != null) {
            System.out.print(currNode.data + " -> ");
            currNode = currNode.next;
        }
        System.out.println("null");
    }

    public static void main(String[] args) {
        rev l = new rev();
        l.add(1);
        l.add(2);
        l.add(3);
        l.printList();
        System.out.println();
        l.reverseList();
        System.out.println("Reverse Linkedlist : ");
        l.printList();

    }
}
